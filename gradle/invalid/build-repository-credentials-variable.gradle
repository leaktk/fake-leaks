afterEvaluate {
    def ext = project.ext
    publishing {
        publications {
            release(MavenPublication) {
                groupId ext.groupId
                artifactId ext.artifactId
                version ext.version

                if (isAndroidEnv(project)) {
                    if (project.ext.multiPublishMode) {
                        artifact("$buildDir/outputs/aar/${project.getName()}-release.aar")
                        artifact sourcesJar
                    } else {
                        from project.components.release
                    }
                } else {
                    from project.components.java
                }

                pom {
                    name = ext.artifactId
                    description = ext.artifactId
                    url = ext.website

                    licenses {
                        license {
                            name = 'The Apache Software License, Version 2.0'
                            url = 'http://www.apache.org/licenses/LICENSE-2.0.txt'
                        }
                    }
                    developers {
                        developer {
                            id = ext.ossrhUsername
                            name = ext.ossrhUsername
                        }
                    }
                    scm {
                        url = ext.website
                        connection = ext.website
                        developerConnection = ext.website + ".git"
                    }

                    if (project.ext.multiPublishMode) {
                        withXml {
                            def dependenciesNode = asNode().getAt('dependencies')[0] ?:
                                    asNode().appendNode('dependencies')

                            configurations.api.getDependencies().each {
                                dep -> addDependency(project, dependenciesNode, dep, "compile")
                            }
                            configurations.implementation.getDependencies().each {
                                dep -> addDependency(project, dependenciesNode, dep, "runtime")
                            }
                        }
                    }
                }
            }
        }

        repositories {
            maven {
                // s01 is newest
                def releasesUrl = "https://s01.oss.sonatype.org/content/repositories/releases/"
                def snapshotUrl = "https://s01.oss.sonatype.org/content/repositories/snapshots/"
                url = version.toUpperCase().endsWith('SNAPSHOT') ? snapshotUrl : releasesUrl

                credentials {
                    username ossrhUsername
                    password ossrhPassword
                }
            }
        }
    }

    signing {
        sign publishing.publications
    }
}
